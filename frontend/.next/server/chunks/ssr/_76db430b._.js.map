{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/directus.ts"],"sourcesContent":["import { createDirectus, rest } from \"@directus/sdk\";\n\nconst directus = createDirectus(process.env.DIRECTUS_URL as string).with(\n  rest()\n);\n\nexport default directus;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,WAAW,CAAA,GAAA,kJAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAY,IAAI,CACtE,CAAA,GAAA,kJAAA,CAAA,OAAI,AAAD;uCAGU","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/isMobile.ts"],"sourcesContent":["import { headers } from \"next/headers\";\nimport isMobile from \"is-mobile\";\n\nexport const checkIsMobile = (): boolean => {\n  const userAgent = headers().get(\"user-agent\");\n  if (!userAgent) {\n    return false;\n  }\n  return isMobile({ ua: userAgent });\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,gBAAgB;IAC3B,MAAM,YAAY,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC;IAChC,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IACA,OAAO,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE;QAAE,IAAI;IAAU;AAClC","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/page.tsx"],"sourcesContent":["import directus from \"@/lib/directus\";\nimport { readItems } from \"@directus/sdk\";\nimport { checkIsMobile } from \"@/lib/isMobile\";\n\n// ブランドの型を定義（TypeScript用）\ntype Brand = {\n  id: number;\n  name: string;\n  slug: string;\n};\n\nexport default async function HomePage() {\n  // Directusから'brands'コレクションのデータを取得\n  const brands = await directus.request(readItems(\"brands\"));\n  const isMobile = checkIsMobile();\n\n  return (\n    <main>\n      <h1>ブランド一覧</h1>\n      <ul>\n        {brands.map((brand: Brand) => (\n          <li key={brand.id}>{brand.name}</li>\n        ))}\n      </ul>\n\n      <h1>サーバーサイドでのデバイス判定</h1>\n\n      {isMobile ? (\n        // --- モバイル用のHTML ---\n        <div className=\"bg-green-200 p-4 mt-4\">\n          <p className=\"text-lg font-bold\">モバイルとして判定されました</p>\n          <p>こちらはスマートフォン向けのHTMLです。</p>\n        </div>\n      ) : (\n        // --- PC用のHTML ---\n        <div className=\"bg-blue-200 p-4 mt-4\">\n          <p className=\"text-lg font-bold\">PCとして判定されました</p>\n          <p>こちらはPC向けのHTMLです。</p>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AASe,eAAe;IAC5B,kCAAkC;IAClC,MAAM,SAAS,MAAM,sHAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,CAAA,GAAA,kJAAA,CAAA,YAAS,AAAD,EAAE;IAChD,MAAM,WAAW,CAAA,GAAA,sHAAA,CAAA,gBAAa,AAAD;IAE7B,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;0BACE,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;kCAAmB,MAAM,IAAI;uBAArB,MAAM,EAAE;;;;;;;;;;0BAIrB,8OAAC;0BAAG;;;;;;YAEH,WACC,qBAAqB;0BACrB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAoB;;;;;;kCACjC,8OAAC;kCAAE;;;;;;;;;;;uBAGL,mBAAmB;0BACnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAoB;;;;;;kCACjC,8OAAC;kCAAE;;;;;;;;;;;;;;;;;;AAKb","debugId":null}}]
}