{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///app/src/contexts/DeviceContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, ReactNode } from \"react\";\n\n// Contextに保存するデータの型を定義します\ntype DeviceContextType = {\n  isMobile: boolean;\n};\n\n// Contextを作成します\nconst DeviceContext = createContext<DeviceContextType>({ isMobile: false });\n\n// アプリ全体にisMobileの値を提供する部品（Provider）です\nexport const DeviceProvider = ({\n  children,\n  isMobile,\n}: {\n  children: ReactNode;\n  isMobile: boolean;\n}) => {\n  return (\n    <DeviceContext.Provider value={{ isMobile }}>\n      {children}\n    </DeviceContext.Provider>\n  );\n};\n\n// どのコンポーネントからでもisMobileの値を取り出せる蛇口（カスタムフック）です\nexport const useDevice = () => useContext(DeviceContext);\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASA,gBAAgB;AAChB,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAqB;IAAE,UAAU;AAAM;AAGlE,MAAM,iBAAiB,CAAC,EAC7B,QAAQ,EACR,QAAQ,EAIT;IACC,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;QAAS;kBACvC;;;;;;AAGP;AAGO,MAAM,YAAY,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE","debugId":null}}]
}